{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB;;EAC5B,CAAA,GAA4B;;EAC5B,iBAAA,GAA4B,OAAA,CAAQ,2BAAR,EAlB5B;;;EAqBA,IAAC,CAAA,OAAD,CAAS,cAAT,EACE;IAAA,KAAA,EACE;MAAA,aAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAA+B,CAA/B;MAAT,CAA1C;MACA,qBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB;MAAT;IAD1C;EADF,CADF,EArBA;;;EA2BA,IAAC,CAAA,OAAD,CAAS,eAAT,EAA0B,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,iBAAA,CAAkB,CAAlB,CAAF,CAAuB,CAAC;EAAjC,CAA1B;;EA3BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'FREI/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nL                         = @\nvalidate_npm_name         = require 'validate-npm-package-name'\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'frei_npmname',\n  tests:\n    \"x is a text\":                            ( x ) -> @isa.text                      x\n    \"x isa _frei_npmname\":                    ( x ) -> @isa._frei_npmname x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare '_frei_npmname', ( x ) -> ( validate_npm_name x ).validForNewPackages\n\n# # #-----------------------------------------------------------------------------------------------------------\n# # @declare 'intertext_template_name',\n# #   tests:\n# #     \"x is a nonempty_text\":                   ( x ) -> @isa.nonempty_text                      x\n# #     \"x is name of template\":                  ( x ) -> @isa.function ( require './templates' )[ x ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# ### TAINT consider to use JS regex unicode properties:\n\n# ```\n# /\\p{Script_Extensions=Latin}/u\n# /\\p{Script=Latin}/u\n# /\\p{Script_Extensions=Cyrillic}/u\n# /\\p{Script_Extensions=Greek}/u\n# /\\p{Unified_Ideograph}/u\n# /\\p{Script=Han}/u\n# /\\p{Script_Extensions=Han}/u\n# /\\p{Ideographic}/u\n# /\\p{IDS_Binary_Operator}/u\n# /\\p{IDS_Trinary_Operator}/u\n# /\\p{Radical}/u\n# /\\p{White_Space}/u\n# /\\p{Script_Extensions=Hiragana}/u\n# /\\p{Script=Hiragana}/u\n# /\\p{Script_Extensions=Katakana}/u\n# /\\p{Script=Katakana}/u\n# ```\n\n# ###\n# regex_cid_ranges =\n#   hiragana:     '[\\u3041-\\u3096]'\n#   katakana:     '[\\u30a1-\\u30fa]'\n#   kana:         '[\\u3041-\\u3096\\u30a1-\\u30fa]'\n#   ideographic:  '[\\u3006-\\u3007\\u3021-\\u3029\\u3038-\\u303a\\u3400-\\u4db5\\u4e00-\\u9fef\\uf900-\\ufa6d\\ufa70-\\ufad9\\u{17000}-\\u{187f7}\\u{18800}-\\u{18af2}\\u{1b170}-\\u{1b2fb}\\u{20000}-\\u{2a6d6}\\u{2a700}-\\u{2b734}\\u{2b740}-\\u{2b81d}\\u{2b820}-\\u{2cea1}\\u{2ceb0}-\\u{2ebe0}\\u{2f800}-\\u{2fa1d}]'\n\n# #-----------------------------------------------------------------------------------------------------------\n# ### TAINT kludge; this will be re-implemented in InterText ###\n# @interplot_regex_cjk_property_terms = [\n#   'Ideographic'                     ### https://unicode.org/reports/tr44/#Ideographic ###\n#   'Radical'\n#   'IDS_Binary_Operator'\n#   'IDS_Trinary_Operator'\n#   'Script_Extensions=Hiragana'\n#   'Script_Extensions=Katakana'\n#   'Script_Extensions=Hangul'\n#   'Script_Extensions=Han'\n#   ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_regex_any_of_cjk_property_terms = ->\n#   return '[' + ( ( \"\\\\p{#{t}}\" for t in @interplot_regex_cjk_property_terms ).join '' ) + ']'\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_with_hiragana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? has hiragana':           ( x ) -> ( x.match ///#{regex_cid_ranges.hiragana}///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_with_katakana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? has katakana':           ( x ) -> ( x.match ///#{regex_cid_ranges.katakana}///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_with_kana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? has kana':               ( x ) -> ( x.match ///#{regex_cid_ranges.kana}///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_with_ideographic',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? has ideographic':        ( x ) -> ( x.match ///#{regex_cid_ranges.ideographic}///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_hiragana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? is hiragana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.hiragana}+$///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_katakana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? is katakana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.katakana}+$///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_kana',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? is kana':                ( x ) -> ( x.match ///^#{regex_cid_ranges.kana}+$///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_text_ideographic',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? is ideographic':         ( x ) -> ( x.match ///^#{regex_cid_ranges.ideographic}+$///u )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'interplot_text_cjk',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? is cjk':                 ( x ) -> ( x.match /// ^ #{L._regex_any_of_cjk_property_terms()}+ $ /// )?\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'interplot_text_with_cjk',\n#   tests:\n#     '? is a text':              ( x ) -> @isa.text x\n#     '? has cjk':                ( x ) -> ( x.match ///   #{L._regex_any_of_cjk_property_terms()}+   /// )?\n\n\n# #===========================================================================================================\n# # HTML\n# #-----------------------------------------------------------------------------------------------------------\n# ### thx to https://www.w3.org/TR/xml ###\n# tagname_head_pattern = ///\n#   a-z\n#   A-Z\n#   :_\n#   \\xc0-\\xd6\n#   \\xd8-\\xf6\n#   \\u00f8-\\u02ff\n#   \\u0370-\\u037d\n#   \\u037f-\\u1fff\n#   \\u200c-\\u200d\n#   \\u2070-\\u218f\n#   \\u2c00-\\u2fef\n#   \\u3001-\\ud7ff\n#   \\uf900-\\ufdcf\n#   \\ufdf0-\\ufffd\n#   \\u{10000}-\\u{effff} ///u\n# tagname_tail_pattern = ///\n#   0-9\n#   \\.\\x2d\\xb7\n#   \\u0300-\\u036f\n#   \\u203f-\\u2040 ///u\n# tagname_pattern = /// ^\n#   [#{tagname_head_pattern.source}]\n#   [#{tagname_head_pattern.source}#{tagname_tail_pattern.source}]* $ ///u ### must NOT set global flag ###\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_html_tagname',\n#   tests:\n#     \"x is a text\":                    ( x ) -> @isa.text x\n#     \"x matches tagname_pattern\":      ( x ) -> tagname_pattern.test x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_html_naked_attribute_value',\n#   ### thx to https://raw.githubusercontent.com/mathiasbynens/mothereff.in/master/unquoted-attributes/eff.js\n#   also see https://mothereff.in/unquoted-attributes,\n#   https://mathiasbynens.be/notes/unquoted-attribute-values ###\n#   tests:\n#     \"x is a text\":                            ( x ) -> @isa.text x\n#     \"x isa intertext_html_naked_attribute_text\":  ( x ) -> @isa._intertext_html_naked_attribute_text x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare '_intertext_html_naked_attribute_text', ( x ) -> /^[^ \\t\\n\\f\\r\"'`=<>]+$/.test x\n\n# # #-----------------------------------------------------------------------------------------------------------\n# # @declare 'parse_html_settings',\n# #   tests:\n# #     \"x is an object\":                       ( x ) -> @isa.object x\n# #     \"x.format is known\":                    ( x ) -> x.format in [ 'html5', 'mkts', ]\n\n# # #-----------------------------------------------------------------------------------------------------------\n# # @defaults =\n# #   settings:\n# #     parse_html_settings:\n# #       format:     'html5'\n\n# #-----------------------------------------------------------------------------------------------------------\n# ### thx to https://developer.mozilla.org/en-US/docs/Glossary/empty_element ###\n# empty_element_tagnames = new Set \"\"\"area base br col embed hr img input link meta param\n#   source track wbr\"\"\".split /\\s+/\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_html_empty_element_tagname',\n#   tests:\n#     \"x is a text\":                            ( x ) -> @isa.text x\n#     \"x is name of an empty HTML element\":     ( x ) -> @isa._intertext_html_empty_element_tagname x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare '_intertext_html_empty_element_tagname', ( x ) -> empty_element_tagnames.has x\n\n# ### thx to https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements ###\n# #-----------------------------------------------------------------------------------------------------------\n# html5_block_level_tagnames = new Set \"\"\"address article aside blockquote dd details dialog div dl dt\n#   fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hgroup hr li main nav ol p pre section table\n#   td th ul\"\"\".split /\\s+/\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_html_block_level_tagname',\n#   tests:\n#     \"x is a text\":                            ( x ) -> @isa.text x\n#     \"x is name of an empty HTML element\":     ( x ) -> @isa._intertext_html_block_level_tagname x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare '_intertext_html_block_level_tagname', ( x ) -> html5_block_level_tagnames.has x\n\n\n\n\n"
  ]
}